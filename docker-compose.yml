services:
  gateway:
    image: nginx:stable-alpine
    container_name: gateway
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./services:/var/www/html  # чтобы nginx имел доступ ко всем сервисам
    ports:
      - "8080:80"
    depends_on:
      - user-service
      - order-service
      - notification-service

  user-service:
    build: ./services/user-service
    container_name: user-service
    volumes:
      - ./services/user-service:/var/www/html
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/user_service
    depends_on:
      - postgres
    expose:
      - "9000"

  order-service:
    build: ./services/order-service
    container_name: order-service
    volumes:
      - ./services/order-service:/var/www/html
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/order_service
    depends_on:
      - postgres
    expose:
      - "9000"

  notification-service:
    build: ./services/notification-service
    container_name: notification-service
    volumes:
      - ./services/notification-service:/var/www/html
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/notification_service
    depends_on:
      - postgres
    expose:
      - "9000"

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"

volumes:
  pgdata: