name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [order-service, user-service, notification-service]

    steps:
      # 1 Забираем репозиторий
      - name: Checkout code
        uses: actions/checkout@v4

      # 2 Устанавливаем PHP и Composer
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo, pdo_mysql
          coverage: none

      # 2.1 Создаём .env файлы через Makefile
      - name: Create .env files
        run: |
          echo "Creating .env files..."
          cp -n services/${{ matrix.service }}/.env.example services/${{ matrix.service }}/.env || true

      # 3 Переходим в сервис и устанавливаем зависимости
      - name: Install dependencies
        run: |
          cd services/${{ matrix.service }}
          composer install --no-progress --no-interaction --prefer-dist

      # 3.1 Проверка валидности composer.json
      - name: Validate Composer
        run: |
          cd services/${{ matrix.service }}
          composer validate --strict    

      # 4 Запускаем PHPStan
      - name: Run PHPStan
        run: |
          cd services/${{ matrix.service }}
          if [ -f vendor/bin/phpstan ]; then
            vendor/bin/phpstan analyse -l 7 src
          else
            echo "PHPStan не установлен для ${{ matrix.service }} - пропуск."
          fi

      # 5 Запускаем PHPUnit
      - name: Run PHPUnit
        run: |
          cd services/${{ matrix.service }}
          if [ -f vendor/bin/phpunit ]; then
            vendor/bin/phpunit --colors=always --testdox
          else
            echo "PHPUnit не установлен для ${{ matrix.service }} - пропуск."
          fi

      # 6 Проверяем сборку Docker-образа
      - name: Build Docker image
        run: |
          echo "Building Docker image for ${{ matrix.service }}..."
          docker build -t ${{ matrix.service }}:ci ./services/${{ matrix.service }}
